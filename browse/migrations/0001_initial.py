# Generated by Django 5.0.6 on 2024-07-02 10:30

import django.db.models.deletion
import django.db.models.functions.text
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cb_id', models.CharField(help_text='Number of the item.', max_length=10)),
            ],
            options={
                'ordering': ['cb_id'],
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The author's name.", max_length=200, unique=True)),
                ('date_of_birth', models.CharField(default=None, help_text="The author's birth date.", max_length=100)),
                ('date_of_death', models.CharField(default=None, help_text="The author's death date", max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The genre (e.g. Song, Liturgical chant, Versus, etc.)', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_start', models.CharField(help_text='First folio occupied by the item in the source.', max_length=10)),
                ('location_end', models.CharField(help_text='Last folio occupied by the item in the source.', max_length=10)),
                ('title', models.CharField(help_text='Title of the item (incipit).', max_length=200)),
                ('text', models.TextField(help_text='Full text of the item.')),
            ],
            options={
                'ordering': ['abstract_item__cb_id', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The language (e.g. Latin, Middle High German, etc.)', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MusicForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bib_id', models.CharField(help_text='The source identifier.', max_length=100, unique=True)),
                ('location', models.CharField(help_text='The source location.', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TextForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The theme (e.g. Moral, Satyric, Love, etc.)', max_length=200, unique=True)),
            ],
        ),
        migrations.AddConstraint(
            model_name='author',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='author_name_case_insensitive_unique'),
        ),
        migrations.AddField(
            model_name='abstractitem',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='browse.author'),
        ),
        migrations.AddConstraint(
            model_name='genre',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='genre_name_case_insensitive_unique'),
        ),
        migrations.AddField(
            model_name='abstractitem',
            name='genre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='browse.genre'),
        ),
        migrations.AddField(
            model_name='item',
            name='abstract_item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='browse.abstractitem'),
        ),
        migrations.AddConstraint(
            model_name='language',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='language_name_case_insensitive_unique'),
        ),
        migrations.AddField(
            model_name='item',
            name='language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='browse.language'),
        ),
        migrations.AddField(
            model_name='item',
            name='music_form',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='browse.musicform'),
        ),
        migrations.AddField(
            model_name='item',
            name='source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='browse.source'),
        ),
        migrations.AddField(
            model_name='item',
            name='text_form',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='browse.textform'),
        ),
        migrations.AddConstraint(
            model_name='theme',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='theme_name_case_insensitive_unique'),
        ),
        migrations.AddField(
            model_name='abstractitem',
            name='theme',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='browse.theme'),
        ),
    ]
